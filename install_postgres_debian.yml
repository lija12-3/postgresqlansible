---
- name: Install PostgreSQL on Debian-based systems
  hosts: debian_servers
  become: yes
  vars_files:
    - vars/postgresql_vars.yml  # Optional, if you have additional variables

  tasks:
    - name: Install prerequisites (curl and ca-certificates)
      apt:
        name:
          - curl
          - ca-certificates
        state: present

    - name: Install postgresql-common package
      apt:
        name: postgresql-common
        state: present

    - name: Ensure the pgdg directory exists
      file:
        path: /usr/share/postgresql-common/pgdg
        state: directory

    - name: Download the PostgreSQL repository key
      get_url:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        dest: /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc
        mode: '0644'

    - name: Add PostgreSQL APT repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        state: present
        update_cache: yes

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Get the latest PostgreSQL version available
      shell: "apt-cache madison postgresql | grep -oP '(?<=postgresql-)[0-9.]+' | head -1"
      register: latest_pg_version
      changed_when: false
      when: postgresql_version == 'latest'

    - name: Debug PostgreSQL version
      debug:
        var: latest_pg_version.stdout
      when: postgresql_version == 'latest'

    - name: Set the PostgreSQL package name
      set_fact:
        pg_package_name: "postgresql-{{ latest_pg_version.stdout | trim }}"
      when: postgresql_version == 'latest'

    - name: Install PostgreSQL
      apt:
        name: "{{ pg_package_name if postgresql_version == 'latest' else 'postgresql-' + postgresql_version }}"
        state: present
      when: postgresql_version != 'latest' or (postgresql_version == 'latest' and latest_pg_version.stdout != "")

    - name: Ensure PostgreSQL service is enabled and started
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Set PostgreSQL to listen on the configured IP address
      lineinfile:
        path: "/etc/postgresql/{{ latest_pg_version.stdout | trim }}/main/postgresql.conf"
        regexp: '^#?listen_addresses ='
        line: "listen_addresses = '{{ postgresql_listen_address }}'"
      notify: Restart PostgreSQL

  handlers:
    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted
